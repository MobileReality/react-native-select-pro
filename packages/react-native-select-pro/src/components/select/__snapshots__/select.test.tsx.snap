// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select should generate Select snapshot 1`] = `
[
  <View
    onLayout={[Function]}
    style={
      [
        {
          "position": "relative",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "position": "relative",
        }
      }
    >
      <View
        accessibilityLabel="Open a dropdown"
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "backgroundColor": "#ffffff",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": 40,
            },
            false,
            undefined,
            {},
          ]
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
                "height": "100%",
                "justifyContent": "center",
                "paddingHorizontal": 12,
              },
              {
                "paddingRight": 55,
              },
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "fontSize": 12,
                  "textAlign": "left",
                },
                undefined,
                {
                  "color": "#808080",
                },
              ]
            }
          >
            Select...
          </Text>
        </View>
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "height": "100%",
                "justifyContent": "center",
                "position": "absolute",
                "right": 8,
                "top": 0,
              },
              undefined,
            ]
          }
        >
          <Image
            collapsable={false}
            source={
              {
                "testUri": "packages/react-native-select-pro/src/assets/icons/chevron-down.png",
              }
            }
            style={
              {
                "height": 25,
                "transform": [
                  {
                    "rotate": "0deg",
                  },
                ],
                "width": 25,
                "zIndex": -1,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="none"
    style={
      {
        "backgroundColor": "#ffffff",
        "borderBottomLeftRadius": 4,
        "borderBottomRightRadius": 4,
        "borderTopWidth": 0,
        "borderWidth": 1,
        "elevation": 5,
        "flex": 1,
        "left": 0,
        "maxHeight": 120,
        "opacity": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
        "zIndex": 1,
      }
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <NoOptions
          noOptionsText="No options"
        />
      }
      accessibilityLabel="Options list"
      accessibilityState={
        {
          "expanded": false,
        }
      }
      bounces={false}
      data={
        [
          {
            "label": "test",
            "value": "test",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      keyExtractor={[Function]}
      keyboardShouldPersistTaps="handled"
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      persistentScrollbar={true}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      testID="Options list"
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={null}
        >
          <View
            accessibilityLabel="Choose test option"
            accessibilityRole="button"
            accessibilityState={
              {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            forwardedRef={[Function]}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "height": 40,
                "justifyContent": "center",
                "opacity": 1,
                "paddingHorizontal": 12,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "color": "#000000",
                    "fontSize": 12,
                    "textAlign": "left",
                  },
                  undefined,
                ]
              }
            >
              test
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;
