"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[106],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>u});var a=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},k="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},N=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),k=d(n),N=l,u=k["".concat(p,".").concat(N)]||k[N]||s[N]||r;return n?a.createElement(u,i(i({ref:e},m),{},{components:n})):a.createElement(u,i({ref:e},m))}));function u(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=N;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[k]="string"==typeof t?t:l,i[1]=o;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}N.displayName="MDXCreateElement"},5237:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>P,contentTitle:()=>x,default:()=>V,frontMatter:()=>f,metadata:()=>O,toc:()=>w});var a=n(7462),l=n(7294),r=n(3905);const i=t=>{let{name:e,contents:n,label:a="Expo"}=t;const r={"App.tsx":{type:"CODE",contents:n}},i=`https://snack.expo.dev?files=${encodeURIComponent(JSON.stringify(r))}&dependencies=@mobile-reality/react-native-select-pro@latest&supportedPlatforms=ios,android`;return l.createElement("a",{href:i,target:"_blank","aria-label":`Open ${e} example in Expo Snack`},a)},o=()=>l.createElement(i,{contents:"\nimport { View, Text } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    \n    const SECTIONS_DATA = [\n    {\n        title: 'North America',\n        data: [\n            {\n                value: 'us',\n                label: 'United States of America',\n            },\n            {\n                value: 'ca',\n                label: 'Canada',\n            },\n        ],\n    },\n    {\n        title: 'Europe',\n        data: [\n            {\n                value: 'pl',\n                label: 'Poland',\n            },\n            {\n                value: 'es',\n                label: 'Spain',\n            },\n            {\n                value: 'fr',\n                label: 'France',\n            },\n        ],\n    },\n];\n    \n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Text>Basic</Text>\n          <Select options={DATA} />\n          <Text>Sections</Text>\n          <Select options={SECTIONS_DATA} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"options prop"}),p=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} animation={1000} />\n          <Select options={DATA} animation={false} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"animation prop"}),d=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} clearable={true} />\n          <Select options={DATA} clearable={false} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"clearable prop"}),m=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} closeOptionsListOnSelect={true} />\n          <Select options={DATA} closeOptionsListOnSelect={false} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"closeOptionsListOnSelect prop"}),k=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} defaultOption={{ label: 'Option 3', value: 'option3'}} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"defaultOption prop"}),s=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} disabled={true} />\n          <Select options={DATA} disabled={false} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"disabled prop"}),N=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} hasBackdrop={true} />\n          <Select options={DATA} hasBackdrop={false} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"hasBackdrop prop"}),u=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} hideArrow={true} />\n          <Select options={DATA} hideArrow={false} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"hideArrow prop"}),c=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} multiple={true} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"multiple prop"}),g=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={[]} noOptionsText=\"Empty list :(\" />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"noOptionsText prop"}),y=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} placeholderText=\"Hello, select something\" />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"placeholderText prop"}),b=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} placeholderTextColor=\"#71C562\" />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"placeholderTextColor prop"}),C=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} scrollToSelectedOption={false} />\n          <Select options={DATA} scrollToSelectedOption={true} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"scrollToSelectedOption prop"}),h=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} pressableSelectedOption={false} />\n          <Select options={DATA} pressableSelectedOption={true} />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"pressableSelectedOption prop"}),S=()=>l.createElement(i,{contents:"\nimport type { ReactNode } from 'react';\nimport { View, KeyboardAvoidingView, Platform } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst KeyboardAware = ({ children }: { children: ReactNode }) => (\n    <KeyboardAvoidingView\n        style={{\n            flex: 1,\n            justifyContent: 'space-between',\n        }}\n        behavior={Platform.select({ ios: 'padding', android: 'height' })}\n    >\n        {children}\n    </KeyboardAvoidingView>\n);\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <KeyboardAware>\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n              <Select options={DATA} searchable={true} />\n            </View>\n        </KeyboardAware>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"searchable prop"}),v=()=>l.createElement(i,{contents:"\nimport { View } from 'react-native';\nimport { Select, SelectProvider } from '@mobile-reality/react-native-select-pro';\n\nconst App = () => {\n    const DATA = [\n      {\n          label: 'Option 1',\n          value: 'option1',\n      },\n      {\n          label: 'Option 2',\n          value: 'option2',\n      },\n      {\n          label: 'Option 3',\n          value: 'option3',\n      },\n      {\n          label: 'Option 4',\n          value: 'option4',\n      },\n    ];\n    return (\n      <SelectProvider>\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Select options={DATA} theme='none' />\n          <Select options={DATA} theme='dark' />\n          <Select options={DATA} theme='light' />\n        </View>\n      </SelectProvider>\n    );\n};\n\nexport default App;\n",name:"theme prop"}),T=t=>{let{expo:e,exampleLabel:n="GitHub",githubName:a}=t;return l.createElement("ul",null,l.createElement("li",null,e),a&&l.createElement("li",null,l.createElement("a",{target:"_blank",href:`https://github.com/MobileReality/react-native-select-pro/blob/v2/apps/expo/src/examples/${a}.tsx`},n)))},f={id:"select",title:"Select",sidebar_label:"Select",hide_table_of_contents:!0},x=void 0,O={unversionedId:"api/select",id:"api/select",title:"Select",description:"The Select component has only one required prop, which is the options prop.",source:"@site/docs/api/select.mdx",sourceDirName:"api",slug:"/api/select",permalink:"/react-native-select-pro/docs/api/select",draft:!1,editUrl:"https://github.com/MobileReality/react-native-select-pro/edit/master/website/docs/api/select.mdx",tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1681979940,formattedLastUpdatedAt:"Apr 20, 2023",frontMatter:{id:"select",title:"Select",sidebar_label:"Select",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"Usage",permalink:"/react-native-select-pro/docs/usage"},next:{title:"SelectProvider",permalink:"/react-native-select-pro/docs/api/select-provider"}},P={},w=[{value:"Props",id:"props",level:2},{value:"Basic",id:"basic",level:3},{value:"Styles",id:"styles",level:3},{value:"Callbacks",id:"callbacks",level:3},{value:"Methods",id:"methods",level:3},{value:"Customizable",id:"customizable",level:3}],A={toc:w},D="wrapper";function V(t){let{components:e,...n}=t;return(0,r.kt)(D,(0,a.Z)({},A,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Select")," component has only one required prop, which is the ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," prop."),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("h3",{id:"basic"},"Basic"),(0,r.kt)("div",{className:"table-size"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")," ",(0,r.kt)("strong",{parentName:"td"},"(required)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OptionsType<T>")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"An array of objects that represents the available options for a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select"),"."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(o,{mdxType:"OptionsPropSnackLink"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"animation")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"200")),(0,r.kt)("td",{parentName:"tr",align:null},"An options list open-close animation can be enabled or disabled using a ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," parameter. The duration of the animation can be set using a ",(0,r.kt)("inlineCode",{parentName:"td"},"number")," parameter. If you pass ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," as the duration, the animation is still occur but will be instantaneous."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(p,{mdxType:"Animation"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clearable")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Show a clear button to remove selected option."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(d,{mdxType:"Clearable"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"closeOptionsListOnSelect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Close the options list after selected option."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(m,{mdxType:"CloseOptionsListOnSelect"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"defaultOption")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OptionType<T>")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"An object that represents the default option for a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select"),"."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(k,{mdxType:"DefaultOption"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabled")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Disable a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," pressable."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(s,{mdxType:"Disabled"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hasBackdrop")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component should have a ",(0,r.kt)("inlineCode",{parentName:"td"},"Backdrop")," component."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(N,{mdxType:"HasBackdrop"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hideArrow")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the arrow icon should be displayed."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(u,{mdxType:"HideArrow"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multiple")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component should allow the user to select multiple options."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(c,{mdxType:"Multiple"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"noOptionsText")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"No options")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the text that should be displayed when there are no available options in a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(g,{mdxType:"NoOptionsText"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"placeholderText")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Select...")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the placeholder text that should be displayed in a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component when no option is selected."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(y,{mdxType:"PlaceholderText"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"placeholderTextColor")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"#808080")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the color of the placeholder text in a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(b,{mdxType:"PlaceholderTextColor"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scrollToSelectedOption")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component should automatically scroll to the selected option when the options list is opened."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(C,{mdxType:"ScrollToSelectedOption"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pressableSelectedOption")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether the selected option should still be pressable after it has been selected."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(h,{mdxType:"PressableSelectedOption"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"searchable")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component should include a search field that allows the user to filter the options by keyword."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(S,{mdxType:"Searchable"}),mdxType:"TableExample"}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"searchPattern")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(payload: string) => string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(payload: string) => (${payload})")),(0,r.kt)("td",{parentName:"tr",align:null},"Regex definition for searching options."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SelectStyles")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"An object that represents the styles for a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," component."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"theme")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"none")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"light")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"dark")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"none")),(0,r.kt)("td",{parentName:"tr",align:null},"Pre-prepared styles for light and dark theme. They can be overwritten."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(T,{expo:(0,r.kt)(v,{mdxType:"Theme"}),mdxType:"TableExample"})))))),(0,r.kt)("h3",{id:"styles"},"Styles"),(0,r.kt)("div",{className:"table-size"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Note"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the select."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<TextStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the select text."),(0,r.kt)("td",{parentName:"tr",align:null},"If you want to change a color of placeholder use ",(0,r.kt)("inlineCode",{parentName:"td"},"placeholderTextColor")," props"),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.disabled")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the disabled select."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.buttons")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the buttons container the right side."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.multiSelectedOption.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the selected option in select control."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.multiSelectedOption.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the selected option text in select control."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.multiSelectedOption.pressed")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the pressed selected option in select control."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.arrow.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the arrow container."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.arrow.icon")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ImageStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the arrow icon."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.clear.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the clear option button."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.clear.icon")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ImageStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the clear option icon."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.select.leftIcon")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ImageStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the custom left icon."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.option.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the single option."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.option.pressed")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the pressed single option."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.option.selected.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the selected single option."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.option.selected.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the selected single option text."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.option.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<TextStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the single option text."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.optionsList")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the options list container."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.noOptions.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the no options container."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.noOptions.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<TextStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the no options text."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.sectionHeader.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the section header."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.sectionHeader.clear.icon")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ImageStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the section header clear icon."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.sectionHeader.pressed")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the pressed section header."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.sectionHeader.selected.container")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for section header when all section options are selected."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.sectionHeader.selected.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<TextStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for section header text when all section options are selected."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.sectionHeader.text")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<TextStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for the section header text."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"styles.backdrop")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"StyleProp<ViewStyle>")),(0,r.kt)("td",{parentName:"tr",align:null},"Style for backdrop."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"To Do"))))),(0,r.kt)("h3",{id:"callbacks"},"Callbacks"),(0,r.kt)("div",{className:"table-size"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSectionSelect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(options: OptionType<T>[], optionIndexes: number[]) => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when section is selected with section header."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSectionRemove")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(options: OptionType<T>[], optionIndexes: number[]) => void;")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when section is removed with section header."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSelect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(option: OptionType<T>, optionIndex: number) => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when option is selected."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSelectChangeText")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(text: string) => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when text is changed in select input.."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSelectOpened")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," is opened."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onSelectClosed")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when ",(0,r.kt)("inlineCode",{parentName:"td"},"Select")," is closed."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onRemove")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"(option: OptionType<T>, optionIndex: number) => void;")),(0,r.kt)("td",{parentName:"tr",align:null},"Called when a single option is cleared."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do"))))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("div",{className:"table-size"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"open")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Open a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clear")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => { removedSelectedOption?: OptionType<T>")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null; removedSelectedOptionIndex?: number; removedSelectedOptions?: OptionType<T>[]")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"null; removedSelectedOptionsIndexes?: number[]; }")),(0,r.kt)("td",{parentName:"tr",align:null},"Clear a selected option(s)."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"close")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => void")),(0,r.kt)("td",{parentName:"tr",align:null},"Close a ",(0,r.kt)("inlineCode",{parentName:"td"},"Select"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getState")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => State<T>")),(0,r.kt)("td",{parentName:"tr",align:null},"Get current state of ",(0,r.kt)("inlineCode",{parentName:"td"},"Select"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do"))))),(0,r.kt)("h3",{id:"customizable"},"Customizable"),(0,r.kt)("div",{className:"table-size"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"arrowContainerProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the arrow props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"arrowImageProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ImageProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the arrow image props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"backdropChildProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the backdrop child element props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"backdropProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<TouchableWithoutFeedbackProps, 'onPress'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the backdrop element props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clearOptionButtonProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'onPress'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the clear option button props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clearOptionImageProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ImageProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the clear option image props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"flatListProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<FlatListProps<OptionType>, 'ref'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'data'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'getItemLayout'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'renderItem'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'keyExtractor'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the options list props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"noOptionsProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the no options element props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"noOptionsTextProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<TextProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the no options text props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"optionButtonProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<PressableProps, 'ref'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'style'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'onPress'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'accessibilityRole'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'accessibilityState'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'disabled'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the option button props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"optionTextProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<TextProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the option text props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectContainerProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<PressableProps, 'ref'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'style'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"onPress'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the select container props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectInputProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<TextInputProps, 'ref'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'editable'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'placeholder'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'placeholderTextColor'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'style'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'textAlign'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'value'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'onChangeText'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"onPressIn'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the select input props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectLeftIconImageProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ImageProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the select left icon image props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectLeftIconsProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the select left icons props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectRightIconsProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the select right icons props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"selectTextProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<TextProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the select text props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sectionHeaderButtonProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ViewProps, 'style'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'onPress'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the section header button props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sectionHeaderImageProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<ImageProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the section header image props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sectionHeaderTextProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<TextProps, 'style'>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the section header text props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sectionListProps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Omit<SectionListProps<OptionType>, 'ref'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'renderSectionHeader'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'sections'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'getItemLayout'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"'renderItem'")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"keyExtractor")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"onLayout>")),(0,r.kt)("td",{parentName:"tr",align:null},"Override the sections options list props."),(0,r.kt)("td",{parentName:"tr",align:null},"To Do"))))))}V.isMDXComponent=!0}}]);